#! /usr/bin/env bash
umount -Rv "/mnt" || :

# shellcheck disable=SC2043
for dev in /dev/vda /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810; do
  $BASH ./disk-deactivate "$dev"
done

set -efux

disko_devices_dir=$(mktemp -d)
trap 'rm -rf "$disko_devices_dir"' EXIT
mkdir -p "$disko_devices_dir"

( # disk main /dev/vda   #
  device='/dev/vda'
  imageSize='2G'
  name='main'
  type='disk'
  
  ( # gpt  /dev/vda   #
    device='/dev/vda'
    efiGptPartitionFirst='1'
    type='gpt'
    
    if ! blkid "/dev/vda" >&2; then
      sgdisk --clear /dev/vda
    fi
    # try to create the partition, if it fails, try to change the type and name
    if ! sgdisk \
      --align-end  \
      --new=1:0:+1M \
      --change-name=1:disk-main-boot \
      --typecode=1:EF02 \
      /dev/vda
    then sgdisk \
      --change-name=1:disk-main-boot \
      --typecode=1:EF02 \
      /dev/vda
    fi
    # ensure /dev/disk/by-path/..-partN exists before continuing
    partprobe /dev/vda || : # sometimes partprobe fails, but the partitions are still up2date
    udevadm trigger --subsystem-match=block
    udevadm settle
    # try to create the partition, if it fails, try to change the type and name
    if ! sgdisk \
      --align-end  \
      --new=2:0:+512M \
      --change-name=2:disk-main-ESP \
      --typecode=2:EF00 \
      /dev/vda
    then sgdisk \
      --change-name=2:disk-main-ESP \
      --typecode=2:EF00 \
      /dev/vda
    fi
    # ensure /dev/disk/by-path/..-partN exists before continuing
    partprobe /dev/vda || : # sometimes partprobe fails, but the partitions are still up2date
    udevadm trigger --subsystem-match=block
    udevadm settle
    # try to create the partition, if it fails, try to change the type and name
    if ! sgdisk \
      --align-end  \
      --new=3:0:-0 \
      --change-name=3:disk-main-root \
      --typecode=3:8300 \
      /dev/vda
    then sgdisk \
      --change-name=3:disk-main-root \
      --typecode=3:8300 \
      /dev/vda
    fi
    # ensure /dev/disk/by-path/..-partN exists before continuing
    partprobe /dev/vda || : # sometimes partprobe fails, but the partitions are still up2date
    udevadm trigger --subsystem-match=block
    udevadm settle
    
    
    
    
    
    
    ( # filesystem  /dev/disk/by-partlabel/disk-main-ESP vfat /boot #
      device='/dev/disk/by-partlabel/disk-main-ESP'
      declare -a extraArgs=()
      format='vfat'
      declare -a mountOptions=('defaults')
      mountpoint='/boot'
      type='filesystem'
      
      if ! (blkid '/dev/disk/by-partlabel/disk-main-ESP' | grep -q 'TYPE='); then
        mkfs.vfat \
           \
          /dev/disk/by-partlabel/disk-main-ESP
      fi
      
      
    )
    
    ( # btrfs  /dev/disk/by-partlabel/disk-main-root   #
      device='/dev/disk/by-partlabel/disk-main-root'
      declare -a extraArgs=('-f')
      declare -a mountOptions=('defaults')
      mountpoint=''
      type='btrfs'
      
      # create the filesystem only if the device seems empty
      if ! (blkid '/dev/disk/by-partlabel/disk-main-root' -o export | grep -q '^TYPE='); then
        mkfs.btrfs "/dev/disk/by-partlabel/disk-main-root" -f
      fi
      if (blkid "/dev/disk/by-partlabel/disk-main-root" -o export | grep -q '^TYPE=btrfs$'); then
        
        (
        MNTPOINT=$(mktemp -d)
        mount /dev/disk/by-partlabel/disk-main-root "$MNTPOINT" -o subvol=/
        trap 'umount $MNTPOINT; rm -rf $MNTPOINT' EXIT
        SUBVOL_ABS_PATH="$MNTPOINT//home"
        mkdir -p "$(dirname "$SUBVOL_ABS_PATH")"
        if ! btrfs subvolume show "$SUBVOL_ABS_PATH" > /dev/null 2>&1; then
          btrfs subvolume create "$SUBVOL_ABS_PATH" 
        fi
        
      )
      (
        MNTPOINT=$(mktemp -d)
        mount /dev/disk/by-partlabel/disk-main-root "$MNTPOINT" -o subvol=/
        trap 'umount $MNTPOINT; rm -rf $MNTPOINT' EXIT
        SUBVOL_ABS_PATH="$MNTPOINT//nix"
        mkdir -p "$(dirname "$SUBVOL_ABS_PATH")"
        if ! btrfs subvolume show "$SUBVOL_ABS_PATH" > /dev/null 2>&1; then
          btrfs subvolume create "$SUBVOL_ABS_PATH" 
        fi
        
      )
      (
        MNTPOINT=$(mktemp -d)
        mount /dev/disk/by-partlabel/disk-main-root "$MNTPOINT" -o subvol=/
        trap 'umount $MNTPOINT; rm -rf $MNTPOINT' EXIT
        SUBVOL_ABS_PATH="$MNTPOINT//persist"
        mkdir -p "$(dirname "$SUBVOL_ABS_PATH")"
        if ! btrfs subvolume show "$SUBVOL_ABS_PATH" > /dev/null 2>&1; then
          btrfs subvolume create "$SUBVOL_ABS_PATH" 
        fi
        
      )
      (
        MNTPOINT=$(mktemp -d)
        mount /dev/disk/by-partlabel/disk-main-root "$MNTPOINT" -o subvol=/
        trap 'umount $MNTPOINT; rm -rf $MNTPOINT' EXIT
        SUBVOL_ABS_PATH="$MNTPOINT//rootfs"
        mkdir -p "$(dirname "$SUBVOL_ABS_PATH")"
        if ! btrfs subvolume show "$SUBVOL_ABS_PATH" > /dev/null 2>&1; then
          btrfs subvolume create "$SUBVOL_ABS_PATH" 
        fi
        
      )
      
      fi
      
      
      
    )
    
    
    
    
  )
  
  
)
( # disk storage /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810   #
  device='/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810'
  imageSize='2G'
  name='storage'
  type='disk'
  
  ( # gpt  /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810   #
    device='/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810'
    efiGptPartitionFirst='1'
    type='gpt'
    
    if ! blkid "/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810" >&2; then
      sgdisk --clear /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810
    fi
    # try to create the partition, if it fails, try to change the type and name
    if ! sgdisk \
      --align-end  \
      --new=1:0:-0 \
      --change-name=1:disk-storage-storage \
      --typecode=1:8300 \
      /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810
    then sgdisk \
      --change-name=1:disk-storage-storage \
      --typecode=1:8300 \
      /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810
    fi
    # ensure /dev/disk/by-path/..-partN exists before continuing
    partprobe /dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810 || : # sometimes partprobe fails, but the partitions are still up2date
    udevadm trigger --subsystem-match=block
    udevadm settle
    
    
    
    
    
    ( # btrfs  /dev/disk/by-partlabel/disk-storage-storage   #
      device='/dev/disk/by-partlabel/disk-storage-storage'
      declare -a extraArgs=('-f')
      declare -a mountOptions=('defaults')
      mountpoint=''
      type='btrfs'
      
      # create the filesystem only if the device seems empty
      if ! (blkid '/dev/disk/by-partlabel/disk-storage-storage' -o export | grep -q '^TYPE='); then
        mkfs.btrfs "/dev/disk/by-partlabel/disk-storage-storage" -f
      fi
      if (blkid "/dev/disk/by-partlabel/disk-storage-storage" -o export | grep -q '^TYPE=btrfs$'); then
        
        (
        MNTPOINT=$(mktemp -d)
        mount /dev/disk/by-partlabel/disk-storage-storage "$MNTPOINT" -o subvol=/
        trap 'umount $MNTPOINT; rm -rf $MNTPOINT' EXIT
        SUBVOL_ABS_PATH="$MNTPOINT//storage"
        mkdir -p "$(dirname "$SUBVOL_ABS_PATH")"
        if ! btrfs subvolume show "$SUBVOL_ABS_PATH" > /dev/null 2>&1; then
          btrfs subvolume create "$SUBVOL_ABS_PATH" 
        fi
        
      )
      
      fi
      
      
      
    )
    
    
    
    
  )
  
  
)


set -efux
# first create the necessary devices
(
  device='/dev/vda'
  imageSize='2G'
  name='main'
  type='disk'
  
  (
    device='/dev/vda'
    efiGptPartitionFirst='1'
    type='gpt'
    
    
    
  )
  
  
)
(
  device='/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810'
  imageSize='2G'
  name='storage'
  type='disk'
  
  (
    device='/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810'
    efiGptPartitionFirst='1'
    type='gpt'
    
    
    
  )
  
  
)


# and then mount the filesystems in alphabetical order
(
  device='/dev/vda'
  imageSize='2G'
  name='main'
  type='disk'
  
  (
    device='/dev/vda'
    efiGptPartitionFirst='1'
    type='gpt'
    
    (
      device='/dev/disk/by-partlabel/disk-main-root'
      declare -a extraArgs=('-f')
      declare -a mountOptions=('defaults')
      mountpoint=''
      type='btrfs'
      
      if ! findmnt /dev/disk/by-partlabel/disk-main-root "/mnt/" > /dev/null 2>&1; then
        mount /dev/disk/by-partlabel/disk-main-root "/mnt/" \
        -o compress=lzo -o subvol=/rootfs \
        -o X-mount.mkdir
      fi
      
      
    )
    
    
  )
  
  
)
(
  device='/dev/vda'
  imageSize='2G'
  name='main'
  type='disk'
  
  (
    device='/dev/vda'
    efiGptPartitionFirst='1'
    type='gpt'
    
    (
      device='/dev/disk/by-partlabel/disk-main-ESP'
      declare -a extraArgs=()
      format='vfat'
      declare -a mountOptions=('defaults')
      mountpoint='/boot'
      type='filesystem'
      
      if ! findmnt /dev/disk/by-partlabel/disk-main-ESP "/mnt/boot" >/dev/null 2>&1; then
        mount /dev/disk/by-partlabel/disk-main-ESP "/mnt/boot" \
          -t "vfat" \
          -o defaults \
          -o X-mount.mkdir
      fi
      
      
    )
    
    
  )
  
  
)
(
  device='/dev/vda'
  imageSize='2G'
  name='main'
  type='disk'
  
  (
    device='/dev/vda'
    efiGptPartitionFirst='1'
    type='gpt'
    
    (
      device='/dev/disk/by-partlabel/disk-main-root'
      declare -a extraArgs=('-f')
      declare -a mountOptions=('defaults')
      mountpoint=''
      type='btrfs'
      
      if ! findmnt /dev/disk/by-partlabel/disk-main-root "/mnt/home" > /dev/null 2>&1; then
        mount /dev/disk/by-partlabel/disk-main-root "/mnt/home" \
        -o subvol=/home \
        -o X-mount.mkdir
      fi
      
      
    )
    
    
  )
  
  
)
(
  device='/dev/vda'
  imageSize='2G'
  name='main'
  type='disk'
  
  (
    device='/dev/vda'
    efiGptPartitionFirst='1'
    type='gpt'
    
    (
      device='/dev/disk/by-partlabel/disk-main-root'
      declare -a extraArgs=('-f')
      declare -a mountOptions=('defaults')
      mountpoint=''
      type='btrfs'
      
      if ! findmnt /dev/disk/by-partlabel/disk-main-root "/mnt/nix" > /dev/null 2>&1; then
        mount /dev/disk/by-partlabel/disk-main-root "/mnt/nix" \
        -o compress=lzo -o noatime -o subvol=/nix \
        -o X-mount.mkdir
      fi
      
      
    )
    
    
  )
  
  
)
(
  device='/dev/vda'
  imageSize='2G'
  name='main'
  type='disk'
  
  (
    device='/dev/vda'
    efiGptPartitionFirst='1'
    type='gpt'
    
    (
      device='/dev/disk/by-partlabel/disk-main-root'
      declare -a extraArgs=('-f')
      declare -a mountOptions=('defaults')
      mountpoint=''
      type='btrfs'
      
      if ! findmnt /dev/disk/by-partlabel/disk-main-root "/mnt/persist" > /dev/null 2>&1; then
        mount /dev/disk/by-partlabel/disk-main-root "/mnt/persist" \
        -o compress=lzo -o noatime -o subvol=/persist \
        -o X-mount.mkdir
      fi
      
      
    )
    
    
  )
  
  
)
(
  device='/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810'
  imageSize='2G'
  name='storage'
  type='disk'
  
  (
    device='/dev/disk/by-id/scsi-0BUYVM_SLAB_VOLUME-18810'
    efiGptPartitionFirst='1'
    type='gpt'
    
    (
      device='/dev/disk/by-partlabel/disk-storage-storage'
      declare -a extraArgs=('-f')
      declare -a mountOptions=('defaults')
      mountpoint=''
      type='btrfs'
      
      if ! findmnt /dev/disk/by-partlabel/disk-storage-storage "/mnt/storage" > /dev/null 2>&1; then
        mount /dev/disk/by-partlabel/disk-storage-storage "/mnt/storage" \
        -o compress=lzo -o subvol=/storage \
        -o X-mount.mkdir
      fi
      
      
    )
    
    
  )
  
  
)



